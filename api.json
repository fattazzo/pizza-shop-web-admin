{
  "openapi": "3.0.2",
  "info": {
    "title": "PizzaShop",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/fattazzo/pizza-shop/1.0.0",
      "description": ""
    }
  ],
  "paths": {
    "/companies": {
      "summary": "Path used to manage the list of companies.",
      "description": "The REST endpoint/path used to list and create zero or more `Company` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.",
      "get": {
        "tags": ["companies"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Company"
                  }
                },
                "examples": {
                  "example1": {
                    "value": [
                      {
                        "id": 1,
                        "name": "Company 1",
                        "webUrl": "wwww.company1.com"
                      },
                      {
                        "id": 2,
                        "name": "Company 2",
                        "webUrl": "www.company2.com"
                      }
                    ]
                  }
                }
              }
            },
            "description": "Successful response - returns an array of `Company` entities."
          }
        },
        "security": [{}],
        "operationId": "getCompanies",
        "summary": "List All companies",
        "description": "Gets a list of all `Company` entities."
      },
      "post": {
        "requestBody": {
          "description": "A new `Company` to be created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Company"
              }
            }
          },
          "required": true
        },
        "tags": ["companies"],
        "responses": {
          "201": {
            "description": "Successful response."
          }
        },
        "operationId": "createCompany",
        "summary": "Create a Company",
        "description": "Creates a new instance of a `Company`."
      }
    },
    "/companies/{id}": {
      "summary": "Path used to manage a single Company.",
      "description": "The REST endpoint/path used to get, update, and delete single instances of an `Company`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.",
      "get": {
        "tags": ["companies"],
        "parameters": [
          {
            "name": "id",
            "description": "A unique identifier for a `Company`.",
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                },
                "examples": {
                  "example1": {
                    "value": {
                      "id": 1,
                      "name": "Company 1",
                      "webUrl": "www.company1.com"
                    }
                  }
                }
              }
            },
            "description": "Successful response - returns a single `Company`."
          }
        },
        "operationId": "getCompany",
        "summary": "Get a Company",
        "description": "Gets the details of a single instance of a `Company`."
      },
      "put": {
        "requestBody": {
          "description": "Updated `Company` information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Company"
              }
            }
          },
          "required": true
        },
        "tags": ["companies"],
        "responses": {
          "202": {
            "description": "Successful response."
          }
        },
        "operationId": "updateCompany",
        "summary": "Update a Company",
        "description": "Updates an existing `Company`."
      },
      "delete": {
        "tags": ["companies"],
        "responses": {
          "204": {
            "description": "Successful response."
          }
        },
        "operationId": "deleteCompany",
        "summary": "Delete a Company",
        "description": "Deletes an existing `Company`."
      },
      "parameters": [
        {
          "name": "id",
          "description": "A unique identifier for a `Company`.",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        }
      ]
    },
    "/companies/{id}/branches": {
      "summary": "Path used to manage the list of branches.",
      "description": "The REST endpoint/path used to list and create zero or more `Branch` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.",
      "get": {
        "tags": ["branches"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Branch"
                  }
                },
                "examples": {
                  "example1": {
                    "value": [
                      {
                        "id": 1,
                        "company": {
                          "id": 1,
                          "name": "Company 1",
                          "webUrl": "wwww.company1.com"
                        },
                        "phone": "some text",
                        "webUrl": "some text",
                        "shippingMethods": [
                          {
                            "id": 17,
                            "title": "some text",
                            "description": "some text",
                            "company": {
                              "id": 1,
                              "name": "Company 1",
                              "webUrl": "wwww.company1.com"
                            }
                          },
                          {
                            "id": 89,
                            "title": "some text",
                            "description": "some text",
                            "company": {
                              "id": 1,
                              "name": "Company 1",
                              "webUrl": "wwww.company1.com"
                            }
                          }
                        ],
                        "shippingZones": [
                          {
                            "id": 29,
                            "name": "some text"
                          },
                          {
                            "id": 75,
                            "name": "some text"
                          }
                        ],
                        "primary": true,
                        "address": {
                          "streetAddress": "via test",
                          "number": "1",
                          "place": "Trento",
                          "postalCode": "38121"
                        }
                      },
                      {
                        "id": 2,
                        "company": {
                          "id": 1,
                          "name": "Company 1",
                          "webUrl": "wwww.company1.com"
                        },
                        "phone": "some text",
                        "webUrl": "some text",
                        "shippingMethods": [
                          {
                            "id": 45,
                            "title": "some text",
                            "description": "some text",
                            "company": {
                              "id": 1,
                              "name": "Company 1",
                              "webUrl": "wwww.company1.com"
                            }
                          },
                          {
                            "id": 26,
                            "title": "some text",
                            "description": "some text",
                            "company": {
                              "id": 1,
                              "name": "Company 1",
                              "webUrl": "wwww.company1.com"
                            }
                          }
                        ],
                        "shippingZones": [
                          {
                            "id": 34,
                            "name": "some text"
                          },
                          {
                            "id": 27,
                            "name": "some text"
                          }
                        ],
                        "primary": true,
                        "address": {
                          "streetAddress": "via prova",
                          "number": "1",
                          "place": "Baselga di Pin√®",
                          "postalCode": "38042"
                        }
                      },
                      {
                        "id": 3,
                        "company": {
                          "id": 2,
                          "name": "Company 2",
                          "webUrl": "wwww.company2.com"
                        },
                        "phone": "some text",
                        "webUrl": "some text",
                        "shippingMethods": [
                          {
                            "id": 45,
                            "title": "some text",
                            "description": "some text",
                            "company": {
                              "id": 2,
                              "name": "Company 2",
                              "webUrl": "wwww.company2.com"
                            }
                          },
                          {
                            "id": 26,
                            "title": "some text",
                            "description": "some text",
                            "company": {
                              "id": 2,
                              "name": "Company 2",
                              "webUrl": "wwww.company2.com"
                            }
                          }
                        ],
                        "shippingZones": [
                          {
                            "id": 34,
                            "name": "some text"
                          },
                          {
                            "id": 27,
                            "name": "some text"
                          }
                        ],
                        "primary": true,
                        "address": {
                          "streetAddress": "via Rossi",
                          "number": "10/A",
                          "place": "Milano",
                          "postalCode": "11111"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "description": "Successful response - returns an array of `Branch` entities."
          }
        },
        "operationId": "getBranches",
        "summary": "List All branches of company",
        "description": "Gets a list of all `Branch` entities."
      },
      "post": {
        "requestBody": {
          "description": "A new `Branch` to be created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchDetails"
              }
            }
          },
          "required": true
        },
        "tags": ["branches"],
        "responses": {
          "201": {
            "description": "Successful response."
          }
        },
        "operationId": "createBranch",
        "summary": "Create a Branch for company",
        "description": "Creates a new instance of a `Branch`."
      },
      "parameters": [
        {
          "name": "id",
          "description": "A unique identifier for a `Company`.",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        }
      ]
    },
    "/companies/{id}/branches/{branchId}": {
      "summary": "Path used to manage a single Branch.",
      "description": "The REST endpoint/path used to get, update, and delete single instances of an `Branch`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.",
      "get": {
        "tags": ["branches"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchDetails"
                }
              }
            },
            "description": "Successful response - returns a single `Branch`."
          }
        },
        "operationId": "getBranch",
        "summary": "Get a Branch",
        "description": "Gets the details of a single instance of a `Branch`."
      },
      "put": {
        "requestBody": {
          "description": "Updated `Branch` information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchDetails"
              }
            }
          },
          "required": true
        },
        "tags": ["branches"],
        "responses": {
          "202": {
            "description": "Successful response."
          }
        },
        "operationId": "updateBranch",
        "summary": "Update a Branch",
        "description": "Updates an existing `Branch`."
      },
      "delete": {
        "tags": ["branches"],
        "responses": {
          "204": {
            "description": "Successful response."
          }
        },
        "operationId": "deleteBranch",
        "summary": "Delete a Branch",
        "description": "Deletes an existing `Branch`."
      },
      "parameters": [
        {
          "name": "branchId",
          "description": "A unique identifier for a `Branch`.",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "description": "A unique identifier for a `Company`.",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        }
      ]
    },
    "/companies/{id}/branches/{branchId}/shippingzones": {
      "summary": "Path used to manage the list of shippingzones.",
      "description": "The REST endpoint/path used to list and create zero or more `ShippingZone` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.",
      "get": {
        "tags": ["branches"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShippingZone"
                  }
                }
              }
            },
            "description": "Successful response - returns an array of `ShippingZone` entities."
          }
        },
        "operationId": "getShippingZones",
        "summary": "List All shippingzones",
        "description": "Gets a list of all `ShippingZone` entities."
      },
      "post": {
        "requestBody": {
          "description": "A new `ShippingZone` to be created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingZone"
              }
            }
          },
          "required": true
        },
        "tags": ["branches"],
        "responses": {
          "201": {
            "description": "Successful response."
          }
        },
        "operationId": "createShippingZone",
        "summary": "Create a ShippingZone",
        "description": "Creates a new instance of a `ShippingZone`."
      },
      "parameters": [
        {
          "name": "id",
          "description": "A unique identifier for a `Company`.",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        },
        {
          "name": "branchId",
          "description": "A unique identifier for a `Branch`.",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        }
      ]
    },
    "/companies/{id}/branches/{branchId}/shippingzones/{shippingzoneId}": {
      "summary": "Path used to manage a single ShippingZone.",
      "description": "The REST endpoint/path used to get, update, and delete single instances of an `ShippingZone`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.",
      "get": {
        "tags": ["branches"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingZone"
                }
              }
            },
            "description": "Successful response - returns a single `ShippingZone`."
          }
        },
        "operationId": "getShippingZone",
        "summary": "Get a ShippingZone",
        "description": "Gets the details of a single instance of a `ShippingZone`."
      },
      "put": {
        "requestBody": {
          "description": "Updated `ShippingZone` information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingZone"
              }
            }
          },
          "required": true
        },
        "tags": ["branches"],
        "responses": {
          "202": {
            "description": "Successful response."
          }
        },
        "operationId": "updateShippingZone",
        "summary": "Update a ShippingZone",
        "description": "Updates an existing `ShippingZone`."
      },
      "delete": {
        "tags": ["branches"],
        "responses": {
          "204": {
            "description": "Successful response."
          }
        },
        "operationId": "deleteShippingZone",
        "summary": "Delete a ShippingZone",
        "description": "Deletes an existing `ShippingZone`."
      },
      "parameters": [
        {
          "name": "id",
          "description": "A unique identifier for a `Company`.",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        },
        {
          "name": "branchId",
          "description": "A unique identifier for a `Branch`.",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        },
        {
          "name": "shippingzoneId",
          "description": "A unique identifier for a `ShippingZone`.",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        }
      ]
    },
    "/companies/{id}/shippingmethods": {
      "summary": "Path used to manage the list of shippingmethods.",
      "description": "The REST endpoint/path used to list and create zero or more `ShippingMethod` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.",
      "get": {
        "tags": ["shippingmethods"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShippingMethod"
                  }
                },
                "examples": {
                  "example1": {
                    "value": [
                      {
                        "id": 1,
                        "title": "Flat rate",
                        "description": "Lets you charge a fixed rate for shipping."
                      },
                      {
                        "id": 2,
                        "title": "Air mail",
                        "description": "Fast and Furious!"
                      },
                      {
                        "id": 1,
                        "title": "Flat rate",
                        "description": "Lets you charge a fixed rate for shipping."
                      }
                    ]
                  }
                }
              }
            },
            "description": "Successful response - returns an array of `ShippingMethod` entities."
          }
        },
        "operationId": "getShippingMethods",
        "summary": "List All shippingmethods",
        "description": "Gets a list of all `ShippingMethod` entities."
      },
      "post": {
        "requestBody": {
          "description": "A new `ShippingMethod` to be created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingMethod"
              }
            }
          },
          "required": true
        },
        "tags": ["shippingmethods"],
        "responses": {
          "201": {
            "description": "Successful response."
          }
        },
        "operationId": "createShippingMethod",
        "summary": "Create a ShippingMethod",
        "description": "Creates a new instance of a `ShippingMethod`."
      },
      "parameters": [
        {
          "name": "id",
          "description": "A unique identifier for a `Company`.",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        }
      ]
    },
    "/companies/{id}/shippingmethods/{shippingmethodId}": {
      "summary": "Path used to manage a single ShippingMethod.",
      "description": "The REST endpoint/path used to get, update, and delete single instances of an `ShippingMethod`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.",
      "get": {
        "tags": ["shippingmethods"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingMethod"
                }
              }
            },
            "description": "Successful response - returns a single `ShippingMethod`."
          }
        },
        "operationId": "getShippingMethod",
        "summary": "Get a ShippingMethod",
        "description": "Gets the details of a single instance of a `ShippingMethod`."
      },
      "put": {
        "requestBody": {
          "description": "Updated `ShippingMethod` information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingMethod"
              }
            }
          },
          "required": true
        },
        "tags": ["shippingmethods"],
        "responses": {
          "202": {
            "description": "Successful response."
          }
        },
        "operationId": "updateShippingMethod",
        "summary": "Update a ShippingMethod",
        "description": "Updates an existing `ShippingMethod`."
      },
      "delete": {
        "tags": ["shippingmethods"],
        "responses": {
          "204": {
            "description": "Successful response."
          }
        },
        "operationId": "deleteShippingMethod",
        "summary": "Delete a ShippingMethod",
        "description": "Deletes an existing `ShippingMethod`."
      },
      "parameters": [
        {
          "name": "shippingmethodId",
          "description": "A unique identifier for a `ShippingMethod`.",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "description": "A unique identifier for a `Company`.",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        }
      ]
    },
    "/companies/{id}/users": {
      "summary": "Path used to manage the list of users.",
      "description": "The REST endpoint/path used to list and create zero or more `User` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.",
      "get": {
        "tags": ["users"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                },
                "examples": {
                  "example1": {
                    "value": [
                      {
                        "id": 21,
                        "username": "some text",
                        "password": "**********",
                        "email": "some text",
                        "firstName": "some text",
                        "lastName": "some text",
                        "deliveryAddresses": [
                          {
                            "id": 79,
                            "address": {
                              "streetAddress": "some text",
                              "number": "some text",
                              "place": "some text",
                              "postalCode": "some text"
                            },
                            "shippingMethod": {
                              "id": 90,
                              "title": "some text",
                              "description": "some text",
                              "company": {
                                "id": 79,
                                "name": "some text",
                                "webUrl": "some text"
                              }
                            }
                          },
                          {
                            "id": 82,
                            "address": {
                              "streetAddress": "some text",
                              "number": "some text",
                              "place": "some text",
                              "postalCode": "some text"
                            },
                            "shippingMethod": {
                              "id": 3,
                              "title": "some text",
                              "description": "some text",
                              "company": {
                                "id": 89,
                                "name": "some text",
                                "webUrl": "some text"
                              }
                            }
                          }
                        ],
                        "company": {
                          "id": 30,
                          "name": "some text",
                          "webUrl": "some text"
                        },
                        "groups": [
                          {
                            "id": 60,
                            "name": "some text",
                            "roles": ["WEB_ACCESS", "SECURITY_VIEW"],
                            "company": {
                              "id": 5,
                              "name": "some text",
                              "webUrl": "some text"
                            }
                          },
                          {
                            "id": 67,
                            "name": "some text",
                            "roles": ["WEB_ACCESS", "SECURITY_EDIT"],
                            "company": {
                              "id": 56,
                              "name": "some text",
                              "webUrl": "some text"
                            }
                          }
                        ]
                      },
                      {
                        "id": 23,
                        "username": "some text",
                        "password": "**********",
                        "email": "some text",
                        "firstName": "some text",
                        "lastName": "some text",
                        "deliveryAddresses": [
                          {
                            "id": 77,
                            "address": {
                              "streetAddress": "some text",
                              "number": "some text",
                              "place": "some text",
                              "postalCode": "some text"
                            },
                            "shippingMethod": {
                              "id": 87,
                              "title": "some text",
                              "description": "some text",
                              "company": {
                                "id": 69,
                                "name": "some text",
                                "webUrl": "some text"
                              }
                            }
                          },
                          {
                            "id": 72,
                            "address": {
                              "streetAddress": "some text",
                              "number": "some text",
                              "place": "some text",
                              "postalCode": "some text"
                            },
                            "shippingMethod": {
                              "id": 53,
                              "title": "some text",
                              "description": "some text",
                              "company": {
                                "id": 88,
                                "name": "some text",
                                "webUrl": "some text"
                              }
                            }
                          }
                        ],
                        "company": {
                          "id": 21,
                          "name": "some text",
                          "webUrl": "some text"
                        },
                        "groups": [
                          {
                            "id": 97,
                            "name": "some text",
                            "roles": ["WEB_ACCESS", "WEB_ACCESS"],
                            "company": {
                              "id": 52,
                              "name": "some text",
                              "webUrl": "some text"
                            }
                          },
                          {
                            "id": 6,
                            "name": "some text",
                            "roles": ["SECURITY_VIEW", "SECURITY_VIEW"],
                            "company": {
                              "id": 94,
                              "name": "some text",
                              "webUrl": "some text"
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "description": "Successful response - returns an array of `User` entities."
          }
        },
        "operationId": "getUsers",
        "summary": "List All users",
        "description": "Gets a list of all `User` entities."
      },
      "post": {
        "requestBody": {
          "description": "A new `User` to be created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDetails"
              }
            }
          },
          "required": true
        },
        "tags": ["users"],
        "responses": {
          "201": {
            "description": "Successful response."
          }
        },
        "operationId": "createUser",
        "summary": "Create a User",
        "description": "Creates a new instance of a `User`."
      },
      "parameters": [
        {
          "name": "id",
          "description": "A unique identifier for a `Company`.",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        }
      ]
    },
    "/companies/{id}/users/{userId}": {
      "summary": "Path used to manage a single User.",
      "description": "The REST endpoint/path used to get, update, and delete single instances of an `User`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.",
      "get": {
        "tags": ["users"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetails"
                }
              }
            },
            "description": "Successful response - returns a single `User`."
          }
        },
        "operationId": "getUser",
        "summary": "Get a User",
        "description": "Gets the details of a single instance of a `User`."
      },
      "put": {
        "requestBody": {
          "description": "Updated `User` information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDetails"
              }
            }
          },
          "required": true
        },
        "tags": ["users"],
        "responses": {
          "202": {
            "description": "Successful response."
          }
        },
        "operationId": "updateUser",
        "summary": "Update a User",
        "description": "Updates an existing `User`."
      },
      "delete": {
        "tags": ["users"],
        "responses": {
          "204": {
            "description": "Successful response."
          }
        },
        "operationId": "deleteUser",
        "summary": "Delete a User",
        "description": "Deletes an existing `User`."
      },
      "parameters": [
        {
          "name": "id",
          "description": "A unique identifier for a `Company`.",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        },
        {
          "name": "userId",
          "description": "A unique identifier for a `User`.",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        }
      ]
    },
    "/companies/{id}/users/{userId}/deliveryaddresses": {
      "summary": "Path used to manage the list of deliveryaddresses.",
      "description": "The REST endpoint/path used to list and create zero or more `DeliveryAddress` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.",
      "get": {
        "tags": ["users"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryAddress"
                  }
                }
              }
            },
            "description": "Successful response - returns an array of `DeliveryAddress` entities."
          }
        },
        "operationId": "getDeliveryAddresses",
        "summary": "List All deliveryaddresses",
        "description": "Gets a list of all `DeliveryAddress` entities."
      },
      "post": {
        "requestBody": {
          "description": "A new `DeliveryAddress` to be created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryAddress"
              }
            }
          },
          "required": true
        },
        "tags": ["users"],
        "responses": {
          "201": {
            "description": "Successful response."
          }
        },
        "operationId": "createDeliveryAddress",
        "summary": "Create a DeliveryAddress",
        "description": "Creates a new instance of a `DeliveryAddress`."
      },
      "parameters": [
        {
          "name": "id",
          "description": "A unique identifier for a `User`.",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        },
        {
          "name": "userId",
          "description": "A unique identifier for a `User`.",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        }
      ]
    },
    "/companies/{id}/users/{userId}/deliveryaddresses/{deliveryaddressId}": {
      "summary": "Path used to manage a single DeliveryAddress.",
      "description": "The REST endpoint/path used to get, update, and delete single instances of an `DeliveryAddress`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.",
      "get": {
        "tags": ["users"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryAddress"
                }
              }
            },
            "description": "Successful response - returns a single `DeliveryAddress`."
          }
        },
        "operationId": "getDeliveryAddress",
        "summary": "Get a DeliveryAddress",
        "description": "Gets the details of a single instance of a `DeliveryAddress`."
      },
      "put": {
        "requestBody": {
          "description": "Updated `DeliveryAddress` information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryAddress"
              }
            }
          },
          "required": true
        },
        "tags": ["users"],
        "responses": {
          "202": {
            "description": "Successful response."
          }
        },
        "operationId": "updateDeliveryAddress",
        "summary": "Update a DeliveryAddress",
        "description": "Updates an existing `DeliveryAddress`."
      },
      "delete": {
        "tags": ["users"],
        "responses": {
          "204": {
            "description": "Successful response."
          }
        },
        "operationId": "deleteDeliveryAddress",
        "summary": "Delete a DeliveryAddress",
        "description": "Deletes an existing `DeliveryAddress`."
      },
      "parameters": [
        {
          "name": "id",
          "description": "A unique identifier for a `Company`.",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        },
        {
          "name": "userId",
          "description": "A unique identifier for a `User`.",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        },
        {
          "name": "deliveryaddressId",
          "description": "A unique identifier for a `DeliveryAddress`.",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        }
      ]
    },
    "/companies/{id}/groups": {
      "summary": "Path used to manage the list of groups.",
      "description": "The REST endpoint/path used to list and create zero or more `Group` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.",
      "get": {
        "tags": ["groups"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Group"
                  }
                },
                "examples": {
                  "example1": {
                    "value": [
                      {
                        "id": 1,
                        "name": "Admin",
                        "roles": [
                          "SECURITY_VIEW",
                          "SECURITY_EDIT",
                          "WEB_ACCESS"
                        ],
                        "company": {
                          "id": 1,
                          "name": "Company 1",
                          "webUrl": "www.company1.com"
                        }
                      },
                      {
                        "id": 13,
                        "name": "some text",
                        "roles": ["SECURITY_VIEW", "WEB_ACCESS"],
                        "company": {
                          "id": 1,
                          "name": "Company 1",
                          "webUrl": "www.company1.com"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "description": "Successful response - returns an array of `Group` entities."
          }
        },
        "operationId": "getGroups",
        "summary": "List All groups",
        "description": "Gets a list of all `Group` entities."
      },
      "post": {
        "requestBody": {
          "description": "A new `Group` to be created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          },
          "required": true
        },
        "tags": ["groups"],
        "responses": {
          "201": {
            "description": "Successful response."
          }
        },
        "operationId": "createGroup",
        "summary": "Create a Group",
        "description": "Creates a new instance of a `Group`."
      },
      "parameters": [
        {
          "name": "id",
          "description": "A unique identifier for a `Company`.",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        }
      ]
    },
    "/companies/{id}/groups/{groupId}": {
      "summary": "Path used to manage a single Group.",
      "description": "The REST endpoint/path used to get, update, and delete single instances of an `Group`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.",
      "get": {
        "tags": ["groups"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            },
            "description": "Successful response - returns a single `Group`."
          }
        },
        "operationId": "getGroup",
        "summary": "Get a Group",
        "description": "Gets the details of a single instance of a `Group`."
      },
      "put": {
        "requestBody": {
          "description": "Updated `Group` information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          },
          "required": true
        },
        "tags": ["groups"],
        "responses": {
          "202": {
            "description": "Successful response."
          }
        },
        "operationId": "updateGroup",
        "summary": "Update a Group",
        "description": "Updates an existing `Group`."
      },
      "delete": {
        "tags": ["groups"],
        "responses": {
          "204": {
            "description": "Successful response."
          }
        },
        "operationId": "deleteGroup",
        "summary": "Delete a Group",
        "description": "Deletes an existing `Group`."
      },
      "parameters": [
        {
          "name": "id",
          "description": "A unique identifier for a `Company`.",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        },
        {
          "name": "groupId",
          "description": "A unique identifier for a `Group`.",
          "schema": {
            "type": "integer"
          },
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "Company": {
        "description": "",
        "required": ["id", "name"],
        "type": "object",
        "properties": {
          "id": {
            "description": "",
            "type": "integer"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "webUrl": {
            "description": "",
            "type": "string"
          }
        },
        "example": {
          "id": 1,
          "name": "PizzaShop",
          "webUrl": "wwww.pizzashop.example"
        }
      },
      "ShippingMethod": {
        "title": "Root Type for ShippingMethod",
        "description": "",
        "required": ["id", "title"],
        "type": "object",
        "properties": {
          "id": {
            "description": "Method ID",
            "type": "integer"
          },
          "title": {
            "description": "Shipping method title",
            "type": "string"
          },
          "description": {
            "description": "Shipping method description",
            "type": "string"
          }
        },
        "example": {
          "id": 1,
          "title": "Flat rate",
          "description": "Lets you charge a fixed rate for shipping."
        }
      },
      "ShippingZone": {
        "title": "Root Type for ShippingZone",
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the resource",
            "type": "integer"
          },
          "name": {
            "description": "Shipping zone name",
            "type": "string"
          }
        },
        "example": {
          "id": 0,
          "name": "Zone 1"
        }
      },
      "Address": {
        "description": "",
        "required": ["streetAddress", "place"],
        "type": "object",
        "properties": {
          "streetAddress": {
            "description": "",
            "type": "string"
          },
          "number": {
            "description": "",
            "type": "string"
          },
          "place": {
            "description": "",
            "type": "string"
          },
          "postalCode": {
            "description": "",
            "type": "string"
          }
        },
        "example": {
          "streetAddress": "via test",
          "number": "1A",
          "place": "Trento",
          "postalCode": "38121"
        }
      },
      "DeliveryAddress": {
        "description": "",
        "required": ["id", "streetAddress"],
        "type": "object",
        "properties": {
          "id": {
            "description": "",
            "type": "integer"
          },
          "address": {
            "$ref": "#/components/schemas/Address",
            "description": ""
          },
          "shippingMethod": {
            "$ref": "#/components/schemas/ShippingMethod",
            "description": ""
          }
        },
        "example": {
          "id": 1,
          "address": {
            "streetAddress": "via test",
            "number": "1A",
            "place": "Trento",
            "postalCode": "38121"
          },
          "shippingMethod": {
            "id": 56,
            "title": "some text",
            "description": "some text"
          }
        }
      },
      "Group": {
        "description": "",
        "required": ["id", "name"],
        "type": "object",
        "properties": {
          "id": {
            "description": "",
            "type": "integer"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "roles": {
            "description": "List of assigned `Role'",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          }
        },
        "example": {
          "id": 1,
          "name": "Admin",
          "roles": ["WEB_ACCESS", "SECURITY_EDIT", "SECURITY_VIEW"]
        }
      },
      "Role": {
        "description": "",
        "enum": ["WEB_ADMIN", "SECURITY_VIEW", "SECURITY_EDIT"],
        "type": "string"
      },
      "User": {
        "description": "",
        "required": ["id", "username", "password"],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the resource",
            "type": "integer"
          },
          "username": {
            "description": "Login name",
            "type": "string"
          },
          "password": {
            "format": "password",
            "description": "Login password",
            "type": "string"
          },
          "email": {
            "description": "The email address",
            "type": "string"
          },
          "firstName": {
            "description": "First name",
            "type": "string"
          },
          "lastName": {
            "description": "Last name",
            "type": "string"
          }
        },
        "example": {
          "id": 2,
          "username": "some text",
          "password": "**********",
          "email": "some text",
          "firstName": "some text",
          "lastName": "some text"
        }
      },
      "Branch": {
        "description": "",
        "required": ["id", "shippingMethods", "primary", "address"],
        "type": "object",
        "properties": {
          "id": {
            "description": "",
            "type": "integer"
          },
          "phone": {
            "description": "",
            "type": "string"
          },
          "webUrl": {
            "description": "",
            "type": "string"
          },
          "primary": {
            "description": "",
            "type": "boolean"
          },
          "address": {
            "$ref": "#/components/schemas/Address",
            "description": ""
          }
        },
        "example": {
          "id": 1,
          "phone": "XXX XXXXXXX",
          "webUrl": "www.pizzashop.example/branch1",
          "primary": true
        }
      },
      "UserDetails": {
        "description": "",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          },
          {
            "required": ["groups"],
            "type": "object",
            "properties": {
              "groups": {
                "description": "List of assigned `Group`",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "deliveryAddresses": {
                "description": "List of delivery address",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryAddress"
                }
              }
            }
          }
        ],
        "example": {
          "id": 2,
          "username": "some text",
          "password": "**********",
          "email": "some text",
          "firstName": "some text",
          "lastName": "some text",
          "deliveryAddresses": [
            {
              "id": 17,
              "address": {
                "streetAddress": "via Di Bugno",
                "number": "12",
                "place": "Baselga di Pin√®",
                "postalCode": "38042"
              },
              "shippingMethod": {
                "id": 1,
                "title": "Flat rate",
                "description": "Lets you charge a fixed rate for shipping."
              }
            },
            {
              "id": 92,
              "address": {
                "streetAddress": "via Galilei",
                "number": "4/A",
                "place": "Milano",
                "postalCode": "11111"
              },
              "shippingMethod": {
                "id": 2,
                "title": "Air mail",
                "description": "Fast and Furious!"
              }
            }
          ],
          "groups": [
            {
              "id": 1,
              "name": "Admin",
              "roles": ["SECURITY_VIEW", "SECURITY_EDIT", "WEB_ADMIN"]
            }
          ]
        }
      },
      "BranchDetails": {
        "description": "",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Branch"
          },
          {
            "required": ["shippingMethods"],
            "type": "object",
            "properties": {
              "shippingMethods": {
                "description": "List of available `ShippingMethod`",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShippingMethod"
                }
              },
              "shippingZones": {
                "description": "List of available `ShippingZone`",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShippingZone"
                }
              }
            }
          }
        ],
        "example": {
          "id": 1,
          "phone": "XXX XXXXXXX",
          "webUrl": "www.pizzashop.example/branch1",
          "shippingMethods": [
            {
              "id": "flat_rate",
              "title": "Flat rate",
              "description": "Lets you charge a fixed rate for shipping."
            }
          ],
          "shippingZones": [
            {
              "id": 0,
              "name": "Zone 1"
            },
            {
              "id": 0,
              "name": "Zone 2"
            }
          ],
          "primary": true
        }
      }
    },
    "securitySchemes": {
      "Authentication": {
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "security": [
    {
      "Authentication": []
    }
  ]
}
